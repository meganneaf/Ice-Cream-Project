/* This file is the Ice Cream Project for C++
* It prompts a user to make selections for ice Cream
* toppings and sauce then provides a summary and instructions
* on how to build a sundae with the ingredients.
* 
* Created by: Megan Neaf, Michael Nkenchor, and Brian Grouzos
* Creation date: 07/19/2025
*/

#include <iostream>
#include <string>
#include <cctype>
#include <limits>
#include <vector>
#include <algorithm>
using namespace std;

// method to validate the input and gracefully send error notifications
int validateInput(string prompt, int min, int max) {
    int input;
    cout << prompt << endl;
        cin >> input;

        //verifies that the user input doesn't include invalid characters
        //only numbers are acceptable values
        if (cin.fail()) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << "Invalid character. Please enter a number between " <<
            min << " and " << max << endl;
            input = validateInput(prompt, min, max);
        }
        
        //verifies that the user input is either 1, 2, or 3
        if (min>input || input>max){
            cout << "Invalid selection. Please enter a number between " <<
            min << " and " << max << endl;
            input = validateInput(prompt, min, max);
        }
        return input;
}

// method to return a string with quantity and type validated for multiples
string choiceQuantity(string type, int quantity) {
    if (quantity > 1) {
        return "(" + to_string(quantity) + " " + type + "s)";
    }
    else {
        return "(" + to_string(quantity) + " " + type + ")";
    }
}

// main program
int main()
{
    // variables assignment
    int choice;         //user input variable for all choices
    string prompt;     // string prompt for selections
    vector<string> toppings; // vector to store string of chosen items
    
    // declare toppings variables 
    int amount = 0; //user input and tracker for amount of toppings selected
    vector<int> top = {-1}; //stores chosen toppings for validation of duplicates

    //welcome message
    cout << "Welcome to the Custom Ice Cream Builder!" << endl << endl;

    // initial prompt for ice cream choice
    prompt = "Select your base ice cream flavor:\n1. Vanilla\n2. Chocolate\n3. Strawberry";

    //flavor selection
    choice = validateInput(prompt, 1, 3);
    
    prompt = "How many scoops? (1-3)";
    switch (choice) {
        case 1:
            toppings.push_back("Vanilla " + choiceQuantity("scoop", validateInput(prompt,1,3)));
            break;
        case 2: 
            toppings.push_back("Chocolate " + choiceQuantity("scoop", validateInput(prompt,1,3)));
            break;
        case 3:
            toppings.push_back("Strawberry " + choiceQuantity("scoop", validateInput(prompt,1,3)));
            break;
    }

    //topping selection loop
    do{
        prompt = "Select a topping (or 0 to finish):\n1. Sprinkles\n2. Crushed Oreos\n3. Cherries";
        choice = validateInput(prompt, 0, 3);
    
        // validation check on if a topping was already selected
        auto validation = find(top.begin(), top.end(), choice);        
        if (validation != top.end()){
            cout << "Topping previously selected. Only one portion allowed" << endl;
            continue;
    }
        // switch used for storing information on toppings choices
        switch (choice) {
            case 0: 
                amount = 3;
                break;
            case 1:
                prompt = "How many tablespoons? (1-3)";
                top.push_back(choice);
                toppings.push_back("Sprinkles " + 
                    choiceQuantity("tablespoon", validateInput(prompt,1,3)));
                amount++; 
                break;
            case 2:
                prompt = "How many tablespoons? (1-3)";
                top.push_back(choice);
                toppings.push_back("Crushed Oreos " + 
                    choiceQuantity("tablespoon", validateInput(prompt,1,3)));
                amount++; 
                break;
            case 3:
                prompt = "How many pieces? (1-5)";
                top.push_back(choice);
                toppings.push_back("Cherries " + 
                    choiceQuantity("piece", validateInput(prompt,1,5)));
                amount++; 
                break;
        }
    }
        while (amount < 3);

    // Sauce selection
    prompt = "Select a sauce (1 only):\n0. No Sauce\n1. Hot Fudge\n2. Caramel Sauce";
    choice = validateInput(prompt, 0, 2);
    
    prompt = "How many spoonfuls? (1-2)";
    switch (choice) {
        case 0:
            toppings.push_back("No sauce");
            break;
        case 1:
            toppings.push_back("Hot Fudge " + 
                choiceQuantity("spoonful", validateInput(prompt,1,2)));
            break;
        case 2: 
            toppings.push_back("Caramel Sauce " + 
                choiceQuantity("spoonful", validateInput(prompt,1,2)));
            break;
    }

    //print final list of ingredients and instructions
    
    cout << "\nYour Custom Ice Cream Sundae:\n" << endl;
        
    //toppings
    for (int i = 0; i < toppings.size(); i++){
        cout << toppings[i] << endl;
    }

    //final message
    cout << "\nAssembling Instructions: Layer the base, add chosen toppings, finish with sauce. Serve immediately!";
    
    return 0;
}
